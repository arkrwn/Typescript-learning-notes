// Bitwise Operators (Manipulate values at the bit level)
var a = 5; // 00000101 (binary)
var b = 3; // 00000011 (binary)
// Bitwise AND (&)
var andResult = a & b; // 00000001 (binary) -> 1 (decimal)
// Bitwise OR (|)
var orResult = a | b; // 00000111 (binary) -> 7 (decimal)
// Bitwise XOR (^)
var xorResult = a ^ b; // 00000110 (binary) -> 6 (decimal)
// Bitwise NOT (~)
var notResult = ~a; // -6 (decimal - two's complement) 
// Left Shift (<<)
var leftShiftResult = a << 2; // 00010100 (binary) -> 20 (decimal)
// Right Shift (>>)
var rightShiftResult = a >> 2; // 00000001 (binary) -> 1 (decimal)
// Zero-fill Right Shift (>>>) - Use for unsigned numbers
var unsignedRightShift = 255 >>> 2; // 00111111 (binary) -> 63 (decimal)
